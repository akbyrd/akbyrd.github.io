Compatibility
-------------
Aiming for 5 years (`all` is the current cutoff)
2024 light-dark()
2024 nesting
2024 &
2024 :has
2023 nth-child
2021 :not multiple selectors
2021 :is



Reset
-----
Should I use a reset or not?

Reset
* Have to re-implement a lot of boilerplate
* Might have mistakes from missing boilerplate
	* More likely to come up in comments where I can't predict / preview the content
	* Not always possible/reasonable to re-implement (browser specific attributes, newer CSS features)

No Reset
* Site may look different on different browsers
* Will have to fight the browser styles in some cases

Issues
* img loses its size if the file isn't found when using all: unset
* MathML styles are relatively complex (and use new CSS features)



Text Wrapping
-------------
white-space          - 2015 text-wrap + white-space-collapse                                        {normal, collapse, pre, pre-wrap, pre-line, preserve nowrap, wrap}
word-break           - 2015 break between or inside words (without moving word to new line)         {normal, break-all, break-word, keep-all}
overflow-wrap        - 2018 break between or inside words (after moving word to new line)           {anywhere, break-word}
word-wrap            - ---- Non-standard alias of overflow-wrap
line-break           - 2020 For CJK breaking
hyphens              - 2023 allows words to break across lines. Requires lang attribute.            {manual, auto}
white-space-collapse - 2024 provides line breaks at white space                                     {collapse, preserve, preserve-breaks, preserve-spaces, break-spaces}
text-wrap            - 2024 text-wrap-mode + text-wrap-style
text-wrap-mode       - 2024 enable or disable wrapping                                              {wrap, nowrap}
text-wrap-style      - 2024 set wrapping logic                                                      {auto, balance, stable}

https://jsfiddle.net/kesr2Ltf/14/

tl;dr
overflow-wrap: break-word or anywhere
hyphens: auto
lang="en-US"



Guidelines
----------
HTML is semantic, CSS is visual
	Do not embed visual information into HTML
	Use semantic classes only
Vaguely follow BEM for CSS classes
Target HTML tags before classes
	HTML tags
	HTML single classes
	HTML multiple classes



Methodologies
-------------
BEM (Block-Element-Modifier)
SMACSS (Scalable and Modular Architecture for CSS)
Atomic/Utility-First CSS



Resources
---------
Firefox (Gecko) Style Sheets
ua, forms, html, quirk
resource://gre-resources/html.css
https://searchfox.org/mozilla-central/source/layout/style/res/html.css

Chrome (Chromium) Style Sheets
fullscreen, html, mathml, quirks, svg, view-source, viewportAndroid, xhtmlImp
mediaControls, mediaControlsAndroid, mediaControlsAndroidNew, mediaControlsNew
themeChromium, themeChromiumAndroid, themeChromiumLinux, themeChromiumSkia
themeInputMultipleFields, themeMac, themeWin, themeWinQuirks
https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css

Safari (WebKit) Style Sheets
captions, dialog, fullscreen, html, mathml, mediaControls, plugIns, quirks, svg
themeAdwaita, themeWin, themWinQuirks
https://trac.webkit.org/browser/trunk/Source/WebCore/css/html.css

MathML spec
https://w3c.github.io/mathml-core/#the-top-level-math-element

MathML default style sheet
https://w3c.github.io/mathml-core/#user-agent-stylesheet

Mathematical Alphanumeric Symbols
Range: 1D400â€“1D7FF
https://www.unicode.org/charts/PDF/U1D400.pdf

Practice
https://flexboxfroggy.com/

Loading Indicators
https://css-loaders.com/
