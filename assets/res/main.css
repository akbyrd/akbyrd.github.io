/* ---------------------------------------------------------------------------------------------- */
/* Reset */

button, textarea {
	all: unset;
}

/* ---------------------------------------------------------------------------------------------- */
/* Colors */

:root {
	--max-width: 800px;

	--accent:      #007fd4;
	--accent-2:    #14547f;
	--accent-3:    #223a4a;
	--accent-fade: #007fd4a0;
	--error:       #b71c1c;

	--dark-background:    #212121;
	--dark-background-2:  #2a2a2a;
	--dark-background-3:  #313131;
	--dark-background-4:  #3c3c3c;
	--dark-background-5:  #454545;
	--dark-draft-stripe:  #2c2c2c;
	--dark-text:          #bdbdbd;
	--dark-text-detail:   #616161;
	--dark-text-detail-2: #5a5a5a;
	--dark-text-shadow:   #000000a0;
	--dark-outline:       #404040;
	--dark-scrollbar:     #767676;

	--light-background:    #bdbdbd;
	--light-background-2:  #b8b8b8;
	--light-background-3:  #b3b3b3;
	--light-background-4:  #aeaeae;
	--light-background-5:  #a9a9a9;
	--light-draft-stripe:  #a0a0a0;
	--light-text:          #212121;
	--light-text-detail:   #404040;
	--light-text-detail-2: #484848;
	--light-text-shadow:   #00000020;
	--light-outline:       #404040;
	--light-scrollbar:     #808080;

	--code-background:           #101010;
	--code-line-numbers:         #424242;
	--code-macros:               #7e57c2;
	--code-control-flow:         #e91e63;
	--code-labels:               #607d8b;
	--code-keywords:             #2196f3;
	--code-types:                #00897b;
	--code-functions:            #64dd17;
	--code-variables:            #00bcd4;
	--code-literals:             #ffc107;
	--code-escape-seq:           #ff9800;
	--code-format-specs:         #f44336;
	--code-comments:             #33691e;
	--code-default:              #9e9e9e;
	--code-invalid:              #ff0000;
	--code-highlight-background: #191919;
	--code-highlight-border:     #007fd4;
}

/* ---------------------------------------------------------------------------------------------- */
/* Theme Support */

.theme-system, .theme-dark {
	--background:    var(--dark-background);
	--background-2:  var(--dark-background-2);
	--background-3:  var(--dark-background-3);
	--background-4:  var(--dark-background-4);
	--background-5:  var(--dark-background-5);
	--draft-stripe:  var(--dark-draft-stripe);
	--text:          var(--dark-text);
	--text-detail:   var(--dark-text-detail);
	--text-detail-2: var(--dark-text-detail-2);
	--text-shadow:   var(--dark-text-shadow);
	--outline:       var(--dark-outline);
	--scrollbar:     var(--dark-scrollbar);
}

.theme-light {
	--background:    var(--light-background);
	--background-2:  var(--light-background-2);
	--background-3:  var(--light-background-3);
	--background-4:  var(--light-background-4);
	--background-5:  var(--light-background-5);
	--draft-stripe:  var(--light-draft-stripe);
	--text:          var(--light-text);
	--text-detail:   var(--light-text-detail);
	--text-detail-2: var(--light-text-detail-2);
	--text-shadow:   var(--light-text-shadow);
	--outline:       var(--light-outline);
	--scrollbar:     var(--light-scrollbar);
}

@media (prefers-color-scheme: light) {
	.theme-system {
		--background:    var(--light-background);
		--background-2:  var(--light-background-2);
		--background-3:  var(--light-background-3);
		--background-4:  var(--light-background-4);
		--background-5:  var(--light-background-5);
		--draft-stripe:  var(--light-draft-stripe);
		--text:          var(--light-text);
		--text-detail:   var(--light-text-detail);
		--text-detail-2: var(--light-text-detail-2);
		--text-shadow:   var(--light-text-shadow);
		--outline:       var(--light-outline);
		--scrollbar:     var(--light-scrollbar);
	}
}

body, svg, time {
	transition-duration: 200ms;
	transition-property:
		color,
		background-color,
		border-color,
		outline-color,
		scrollbar-color,
		stroke,
		text-shadow;
}

/* ---------------------------------------------------------------------------------------------- */
/* Focus */

html * {
	outline-color: var(--accent-fade);
	outline-offset: 9px;
	outline-width: 3px;
}

:focus-visible {
	outline-color: var(--accent);
	outline-offset: 3px;
	outline-style: solid;
	transition-duration: 200ms;
	transition-property: outline-offset, outline-color;
}

@supports not selector(:focus-visible) {
	:focus:not(:active) {
		outline-color: var(--accent);
		outline-offset: 3px;
		outline-style: solid;
		transition-duration: 200ms;
		transition-property: outline-offset, outline-color;
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Shared / Standard */

a {
	color: var(--accent);
	cursor: pointer;
	hyphenate-character: "";
	text-decoration: underline;
}

@supports not (hyphenate-character: "") {
	a {
		hyphens: manual;
	}
}

blockquote {
	padding: 0 10px;
	border-left-color: var(--text-detail);
	border-left-style: solid;
	border-left-width: 3px;
	margin: unset;
}

body {
	background-color: var(--background);
	display: block;
	margin: 0 auto;
	min-width: 296px;
	max-width: var(--max-width);
	padding-bottom: 20px;

	color: var(--text);
	font-family: serif;
	hyphens: auto;
	line-height: 1.3;
	overflow-wrap: break-word;
	text-align: justify;
	text-shadow: 1px 1px 6px var(--text-shadow);
}

button {
	cursor: pointer;
	overflow: hidden;
	user-select: none;
}

details {
	display: block;
	margin: 20px 0;

	summary {
		cursor: pointer;
		display: block;
		font-family: sans-serif;
		font-size: 14pt;
		font-weight: bold;
		border: 1px solid var(--outline);
		padding: 4px 6px;
		user-select: none;
		transition-duration: 100ms;
		transition-property: background-color;

		&:hover {
			background-color: var(--outline);
		}

		details[open] & {
			margin-bottom: -21px;
		}
	}
}

div {
	margin: 20px 0;
}

footer {
	margin-top: 20px;
}

h1, h2, h3 {
	font-family: sans-serif;
	font-weight: bold;
	margin: 20px 0;
	line-height: normal;
	text-align: left;
}

h1 a, h2 a, h3 a {
	color: var(--text);
	text-decoration: none;
}

h1 a:hover, h2 a:hover, h3 a:hover {
	text-decoration: underline;
}

h1 { font-size: 30pt; }
h2 { font-size: 26pt; }
h3 { font-size: 18pt; }

header {
	margin-bottom: 20px;
}

hr {
	margin: 20px 0;
}

html {
	height: 100%;
	padding-left: clamp(0px, 100vw - 100%, 100% - var(--max-width));
	scrollbar-color: var(--scrollbar) var(--background);
}

img {
	align-items: center;
	display: flex;
	justify-content: space-evenly;
	overflow: auto;
}

main {
	font-size: 14pt;
	padding: 0 20px;
}

p {
	margin: 20px 0;
}

pre {
	margin: unset;
}

section {
	margin: 20px 0;
}

textarea {
	hyphens: manual;
	text-align: left;
	white-space: pre-wrap;
}

textarea:focus {
	outline: none;
}

textarea::placeholder {
	color: var(--text-detail);
	text-shadow: 1px 1px 6px var(--text-shadow);
}

table {
	border-collapse: collapse;
	border-spacing: 0;
	margin: 20px 0;
}

thead, tfoot {
	background-color: var(--background-2);
}

th, td {
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
	padding: 8px;
}

.container {
	/* for copy buttons */
	position: relative;
}

.image-background {
	display: block;
	margin: 0 auto;
	outline: 1px solid var(--outline);
	outline-offset: 0px;
	overflow: hidden;
	width: fit-content;
}

.fade-in {
	animation-duration: 600ms;
	animation-name: fade-in;
	animation-timing-function: cubic-bezier(.5, .5, 0, 1)
}

@keyframes fade-in {
	from {
		opacity: 0%;
		scale: 102%;
	}

	to {
		opacity: 100%;
		scale: 100%;
	}
}

.scroll {
	overflow: auto;
	scrollbar-width: thin;
}

/* ---------------------------------------------------------------------------------------------- */
/* About */

.about-pic-container {
	float: left;
	margin-right: 20px;
}

@media (max-width: 600px) {
	.about-pic-container {
		float: none;
		margin: 0 auto 20px auto;
	}
}

.about-pic {
	max-width: 256px;
}

.about-link-container {
	display: flex;
	justify-content: space-between;
	margin: 0 auto;
	max-width: calc(40px * 6 + 12px * 5);
	padding: 0;
	user-select: none;

	li {
		display: inline;
		height: 40px;
		width: 40px;
	}

	a {
		display: block;
		font-size: 44px;
		font-family: code;
		font-size: 44px;
		text-decoration: none;
	}

	p {
		aspect-ratio: 1;
		background-color: var(--dark-background);
		border-radius: 4px;
		color: var(--dark-text);
		line-height: 42px;
		margin: 0;
		overflow: hidden;
		text-align: center;

		a[title="GitHub"] & { font-size: 105%; }
		a[title="Mastodon"] & { font-size: 98%; }
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Checklists */

ul:has(li input) {
	padding-left: 20px;
}

ul:has(li input) ul:has(li input) {
	padding-left: 40px;
}

li:has(input) {
	display: block;
}

/* ---------------------------------------------------------------------------------------------- */
/* Code */

code, annotation, .copy-block, .comment-toggle-reactions, .symbol, #comment-error {
	font-family: code;
	font-feature-settings: "ss01";
	font-size-adjust: ex-height 0.48;
}

code, annotation {
	font-size: 11pt;
	line-height: 19px;
	tab-size: 4;
	white-space: pre;
}

:not(pre) > code, .container.code {
	background-color: var(--code-background);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
}

:not(pre) > code, math[display="inline"] annotation {
	padding: 1px 3px;
	position: relative;
	bottom: 1px;
	white-space: break-spaces;
	hyphenate-character: "";
	@supports not (hyphenate-character: "") {
		hyphens: manual;
	}
}

.container.code {
	pre {
		counter-reset: line-numbers var(--ln-start, 1);
		will-change: translate;
	}

	code {
		display: block;
		min-width: fit-content;
		padding: 8px 0;
		cursor: text;
	}

	.line {
		border-color: transparent;
		border-style: solid none;
		border-width: 1px;
		display: flex;
		margin: -2px 0;
	}

	.line::before {
		border-color: inherit;
		border-left-style: solid;
		border-width: 1px;
		content: counter(line-numbers);
		left: 0;
		padding: 0 8px;
		position: sticky;
		text-align: right;
		width: var(--ln-width, 1);
	}

	.cl {
		border-color: transparent;
		border-style: none solid;
		border-width: 0 1px 0 0;
		counter-increment: line-numbers;
		cursor: text;
		flex-grow: 1;
		padding-right: 8px;
	}

	.hl::before {
		border-left-color: var(--code-highlight-border);
	}

	.hl .cl {
		border-right-color: var(--code-highlight-border);
	}

	.hl:nth-child(1 of .hl) {
		border-top-color: var(--code-highlight-border);
		position: relative;
		z-index: 1;
	}

	.hl:nth-last-child(1 of .hl) {
		border-bottom-color: var(--code-highlight-border);
		position: relative;
		z-index: 1;
	}
}

.copy-block {
	display: block;
	position: absolute;
	right: 0;
	top: 0;
	z-index: 1;

	height: 34px;
	width: 34px;
	font-size: 24px;
	justify-content: center;
	text-align: center;

	background-color: var(--code-highlight-background);
	border-color: var(--outline);
	border-left-style: solid;
	border-bottom-style: solid;
	border-width: 1px;
	margin: 0;

	opacity: 0%;
	transition-duration: 100ms;
	transition-timing-function: ease-out;

	&:hover {
		opacity: 100%;
	}

	&:focus-visible {
		opacity: 100%;
		transition-duration: 200ms;
		transition-property: opacity, outline-color, outline-offset;
	}

	@supports not selector(:focus-visible) {
		&:focus & {
			opacity: 100%;
			transition-duration: 200ms;
			transition-property: opacity, outline-color, outline-offset;
		}
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Comments */

.end-mark {
	align-items: center;
	color: var(--outline);
	display: flex;
	font-size: 38px;
	justify-content: space-evenly;
	line-height: 0;
	margin: 60px 0;
	opacity: 60%;
	user-select: none;
}

.end-mark::before, .end-mark::after {
	border-top: 1px solid var(--outline);
	content: "";
	height: 0;
	position: relative;
	top: 1px;
	width: 33%;
}

#comments {
	font-size: 12pt;
}

#comment-error {
	font-size: 20px;
	text-align: center;
	border-color: var(--error);
	border-style: solid;
	border-width: 1px;

	position: relative;
	display: flex;
	justify-content: center;
}

#comment-error button {
	font-size: 32px;
	position: absolute;
	right: 0;
	box-sizing: border-box;
	padding: 20px;
	line-height: 100%;
	height: 100%;
	aspect-ratio: 1;
}

.comment {
	background-color: var(--background-2);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
}

.comment h1, .comment h2 {
	border-color: var(--outline);
	border-bottom-style: solid;
	border-width: 1px;
}

.comment h1 { font-size: 24pt; }
.comment h2 { font-size: 20pt; }
.comment h3 { font-size: 12pt; }

.comment pre > code {
	padding: 8px;
}

.comment header {
	display: flex;
	gap: 8px;
	margin: 16px;
}

.comment header a {
	text-decoration: none;
}

.comment header a:hover {
	text-decoration: underline;
}

.comment-avatar {
	align-items: center;
	color: var(--text);
	display: flex;
	font-family: sans-serif;
	font-weight: bold;
	gap: 8px;
	line-height: normal;
	z-index: 1;
}

.comment-avatar img {
	border-radius: 50%;
}

.comment-time {
	color: var(--text-detail);
	display: flex;
	flex-direction: column;
	font-family: sans-serif;
	font-size: 11pt;
	justify-content: center;
}

.comment-content {
	margin: 16px;
}

.comment footer {
	display: grid;
	grid-template-columns: 0fr 1fr;
	margin: 16px;
}

.comment-toggle-reactions {
	border-color: var(--text-detail-2);
	border-radius: 50%;
	border-style: solid;
	border-width: 1px;
	color: var(--text-detail);
	font-size: 32px;
	height: 24px;
	line-height: 24px;
	text-align: center;
	width: 24px;
}

.comment-toggle-reactions:hover {
	background-color: var(--background-4);
}

.comment-reactions {
	display: inline-flex;
	flex-wrap: wrap;
	flex-shrink: 0;
	flex-grow: 0;
	flex-basis: auto;
	gap: 8px 0;
	margin: 0;
}

.comment-reaction {
	background-color: var(--background-4);
	border-color: var(--text-detail);
	border-radius: 12px;
	border-style: solid;
	border-width: 1px;
	font-family: sans-serif;
	font-size: 13.5px;
	height: 24px;
	line-height: 24px;
	margin-left: 8px;
	text-align: center;
	width: 44px;

	position: relative;
	right: 0px;
	transition-duration: 85ms;
	transition-property: border-width, width, margin, right;
	transition-timing-function: ease-out;
	white-space: pre;
}

.comment-reaction[name="HEART"] span:nth-child(1) {
	position: relative;
	top: 0.5px;
}

.comment-toggle-reactions      { z-index: 8; }
.comment-reaction:nth-child(1) { z-index: 7; transition-delay: 0ms; }
.comment-reaction:nth-child(2) { z-index: 6; transition-delay: 15ms; }
.comment-reaction:nth-child(3) { z-index: 5; transition-delay: 30ms; }
.comment-reaction:nth-child(4) { z-index: 4; transition-delay: 45ms; }
.comment-reaction:nth-child(5) { z-index: 3; transition-delay: 60ms; }
.comment-reaction:nth-child(6) { z-index: 2; transition-delay: 75ms; }
.comment-reaction:nth-child(7) { z-index: 1; transition-delay: 100ms; }
.comment-reaction:nth-child(8) { z-index: 0; transition-delay: 115ms; }

.comment-reaction:not([data-visible]) {
	border-width: 0;
	margin: 0;
	pointer-events: none;
	right: 16px;
	transition-timing-function: ease-in;
	width: 0px;
}

.comment-reaction[data-pressed] {
	background-color: var(--accent-3);
	border-color: var(--accent-2);
}

.comment-reaction:hover {
	background-color: var(--background-5);
}

.comment-reaction[data-pressed]:hover {
	background-color: var(--accent-2);
}

.comment-reaction-count {
	padding-left: 6px;
	font-size: 10pt;
	top: .5px;
	position: relative;
}

.comment-replies {
	background-color: var(--background-3);
	border-color: var(--outline);
	border-style: solid;
	border-width: 2px 0 0 0;
	display: flex;
	flex-direction: column;
	margin-bottom: 0;
	position: relative;
}

.comment-replies .reply {
	margin: 0;
}

.comment-replies .reply-line {
	border-left-color: var(--outline);
	border-left-style: solid;
	border-left-width: 2px;
	height: calc(100% - 16px);
	margin: 0 0 0 calc(16px + 20px - 0.5px);
	position: absolute;
	top: 16px;
}

.comment-replies footer,
.comment-replies .comment-content {
	margin-left: calc(16px + 40px + 8px);
}

.comment-replies header {
	margin-bottom: -20px;
}

.comment-replies footer {
	margin-top: -6px;
}

.reply-input {
	border-top-color: var(--outline);
	border-top-style: solid;
	border-top-width: 2px;
}

.comment-input textarea,
.reply-input textarea {
	box-sizing: border-box;
	display: block;
	font-family: sans-serif;
	font-size: 14px;
	overflow: hidden;
	padding: 16px;
	padding-bottom: 14px;
	resize: none;
	width: 100%;
}

.comment-input > div,
.reply-input > div {
	border-color: var(--outline);
	border-style: solid;
	border-width: 0;
	display: flex;
	justify-content: space-between;
	margin: 0 8px;
	padding: 0;
}

.reply-input > div {
	height: 0px;
	transition-property: border, height, padding;
	transition-duration: 200ms;
}

.comment-input > div,
.reply-input:focus-within > div,
.reply-input textarea:not(:placeholder-shown) + div {
	border-width: 1px 0 0 0;
	height: 30px;
	padding: 8px 0;
}

.comment-input button,
.reply-input button {
	display: inline-flex;
	align-items: center;
	gap: 8px;
	justify-content: center;
	padding: 0 8px;
}

.comment-input .symbol,
.reply-input .symbol {
	font-size: 32px;
	line-height: 0px;
}

.comment-submit {
	background-color: #347d39;
	margin-left: auto;
	min-width: 100px;
	text-align: center;
}

.comment-submit:hover {
	background-color: #37843c;
}

.comments-logged-out .comment-submit :nth-child(1) {
	display: none;
}

.comments-logged-in .comment-submit :nth-child(2),
.comments-logged-in .comment-submit :nth-child(3) {
	display: none;
}

.comment-logout {
	color: var(--text-detail);
}

.comments-logged-out .comment-logout {
	display: none;
}

.comment-logout:hover {
	color: var(--text);
}

/* ---------------------------------------------------------------------------------------------- */
/* Error Pages */

body.error {
	display: flex;
	flex-direction: column;
	height: 80%;

	main {
		align-items: center;
		display: flex;
		flex-grow: 1;
		justify-content: center;

		p {
			font-size: 96pt;
			line-height: 80%;
			margin: 0;
		}
	}

	footer {
		display: none;
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Header */

.header {
	align-items: stretch;
	display: block flex;
	font-family: sans-serif;
	font-size: 14pt;
	font-weight: bold;
	line-height: 28px;

	* {
		outline-offset: 3px;
		text-decoration: none;

		&:focus-visible {
			outline-offset: -3px;
		}

		@supports not selector(:focus-visible) {
			&:focus:not(:active) {
				outline-offset: -3px;
			}
		}
	}
}

.header-title {
	font-size: 18pt;
	margin-right: auto;
	padding: 20px;
}

.header-theme-label {
	font-size: 10pt;
	line-height: unset;
	margin: 0;
	opacity: 0%;
	padding: 20px 10px;
	scale: 0%;
	transition-duration: 100ms;
	transition-timing-function: ease-out;
	transition-property: scale, opacity;

	&:has(+ .header-theme-button:hover) {
		opacity: 50%;
		scale: 100%;
	}
}

.header-theme-button {
	font-size: 18px;
	padding: 20px 10px;
}

.header-theme-icon {
	display: block;
	height: 1em;
	stroke: var(--text);
}

.header-theme-icon-background {
	fill: var(--dark-background);
}

.header-theme-icon-fill {
	fill: var(--dark-text);
}

.header-about {
	padding: 20px;
	padding-left: 10px;
}

.header a {
	color: var(--text);
}

/* ---------------------------------------------------------------------------------------------- */
/* Home */

.home main {
	padding: 0;
}

.post-list {
	list-style: none;
}

.post-list-item {
	margin: 10px 0;
}

.post-link {
	display: block;
	outline-offset: 3px;
	padding: 0 20px;
	text-decoration: none;

	&.draft {
		background: repeating-linear-gradient(
			35deg,
			transparent,
			transparent 10px,
			var(--draft-stripe) 10px,
			var(--draft-stripe) 20px
		);
	}

	&:focus-visible {
		outline-offset: -3px;
	}

	@supports not selector(:focus-visible) {
		&:focus:not(:active) {
			outline-offset: -3px;
		}
	}
}

.post-title {
	color: var(--accent);
	padding-top: 10px;

	.home & {
		margin: 0;
	}

	.post-link:hover & {
		text-decoration: underline;
	}
}

.post-time {
	color: var(--text-detail);
	display: block;
	font-family: sans-serif;
	font-size: 11pt;
	font-weight: normal;
	min-width: 1lh;
	min-height: 1lh;
	padding-bottom: 10px;
}

/* ---------------------------------------------------------------------------------------------- */
/* Math */

math {
	font-family: math2;
	cursor: text;
}

semantics {
	display: inline;
	display: inline math;

	/* TODO: move to math */
	font-family: math2;
}

math[display="inline"] {
	/* TODO: remove */
	white-space: normal;
}

math[display="inline"] semantics > * {
	white-space: break-spaces;
}

math[display="block"] {
	min-width: fit-content;
	padding: 6.5px 8px;
	text-align: center;
}

math[display="block"] mtr mtd:not([class]) {
	text-align: right;
}

math[display="block"] mtr mtd:not([class]) + mtd:not([class]) {
	text-align: left;
}

.container.math .scroll {
	margin: 0;
}

.container.math .copy-block {
	border-right-style: solid;
	border-top-style: solid;
}

.no-mathml .container.math .copy-block {
	border-right-style: none;
	border-top-style: none;
}

.no-mathml .container:has(math),
.no-mathml math[display="inline"] annotation {
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
	font-size: 11pt;
}

.no-mathml math[display="block"] {
	display: block;
	display: block math;
	text-align: left;
}

.no-mathml math[display="block"] annotation {
	display: block;
}

.no-mathml math semantics > :not(annotation) {
	display: none;
}

/* ---------------------------------------------------------------------------------------------- */
/* Syntax highlighting */

code, .chroma {
	color: var(--code-default);

	/* Comment          */ .pl-c   { color: var(--code-comments);   color: rgb(145, 152, 161); color: unset; }
	/* Literal          */ .pl-c1  { color: var(--code-literals);   color: rgb(121, 192, 255); color: unset; }
	/* Escape Sequence  */ .pl-cce { color: var(--code-escape-seq); color: rgb(165, 214, 255); color: unset; }
	/* Type             */ .pl-en  { color: var(--code-types);      color: rgb(210, 168, 255); color: unset; }
	/* Keyword          */ .pl-k   { color: var(--code-keywords);   color: rgb(255, 123, 114); color: unset; }
	/* String Delimiter */ .pl-pds { color: var(--code-literals);   color: rgb(165, 214, 255); color: unset; }
	/* String           */ .pl-s   { color: var(--code-literals);   color: rgb(165, 214, 255); color: unset; }
	/* Function         */ .pl-smi { color: var(--code-functions);  color: rgb(240, 246, 252); color: unset; }

	/* Other                    */ .x               { color: var(--code-invalid); }
	/* Error                    */ .err             { color: var(--code-invalid); }
	/* CodeLine                 */ .cl              { color: var(--code-default); }
	/* LineLink                 */ .lnlinks         { color: var(--code-invalid); }
	/* LineHighlight            */ .hl .cl          { background-color: var(--code-highlight-background); }
	/* LineNumbers              */ .line::before    { background-color: var(--code-background); color: var(--code-line-numbers); }
	/* LineNumbers Highlight    */ .line.hl::before { background-color: var(--code-highlight-background); }
	/* Line                     */ .line            { color: var(--code-default); }
	/* Keyword                  */ .k               { color: var(--code-keywords); }
	/* KeywordConstant          */ .kc              { color: var(--code-literals); }
	/* KeywordDeclaration       */ .kd              { color: var(--code-invalid); }
	/* KeywordNamespace         */ .kn              { color: var(--code-invalid); }
	/* KeywordPseudo            */ .kp              { color: var(--code-invalid); }
	/* KeywordReserved          */ .kr              { color: var(--code-keywords); }
	/* KeywordType              */ .kt              { color: var(--code-types); }
	/* Name                     */ .n               { color: var(--code-default); }
	/* NameAttribute            */ .na              { color: var(--code-keywords); }
	/* NameBuiltin              */ .nb              { color: var(--code-keywords); }
	/* NameBuiltinPseudo        */ .bp              { color: var(--code-invalid); }
	/* NameClass                */ .nc              { color: var(--code-types); }
	/* NameConstant             */ .no              { color: var(--code-invalid); }
	/* NameDecorator            */ .nd              { color: var(--code-invalid); }
	/* NameEntity               */ .ni              { color: var(--code-invalid); }
	/* NameException            */ .ne              { color: var(--code-invalid); }
	/* NameFunction             */ .nf              { color: var(--code-functions); }
	/* NameFunctionMagic        */ .fm              { color: var(--code-invalid); }
	/* NameLabel                */ .nl              { color: var(--code-labels); }
	/* NameNamespace            */ .nn              { color: var(--code-invalid); }
	/* NameOther                */ .nx              { color: var(--code-variables); }
	/* NameProperty             */ .py              { color: var(--code-invalid); }
	/* NameTag                  */ .nt              { color: var(--code-variables); }
	/* NameVariable             */ .nv              { color: var(--code-variables); }
	/* NameVariableClass        */ .vc              { color: var(--code-invalid); }
	/* NameVariableGlobal       */ .vg              { color: var(--code-invalid); }
	/* NameVariableInstance     */ .vi              { color: var(--code-invalid); }
	/* NameVariableMagic        */ .vm              { color: var(--code-invalid); }
	/* Literal                  */ .l               { color: var(--code-invalid); }
	/* LiteralDate              */ .ld              { color: var(--code-invalid); }
	/* LiteralString            */ .s               { color: var(--code-literals); }
	/* LiteralStringAffix       */ .sa              { color: var(--code-invalid); }
	/* LiteralStringBacktick    */ .sb              { color: var(--code-invalid); }
	/* LiteralStringChar        */ .sc              { color: var(--code-literals); }
	/* LiteralStringDelimiter   */ .dl              { color: var(--code-invalid); }
	/* LiteralStringDoc         */ .sd              { color: var(--code-invalid); }
	/* LiteralStringDouble      */ .s2              { color: var(--code-literals); }
	/* LiteralStringEscape      */ .se              { color: var(--code-escape-seq); }
	/* LiteralStringHeredoc     */ .sh              { color: var(--code-invalid); }
	/* LiteralStringInterpol    */ .si              { color: var(--code-invalid); }
	/* LiteralStringOther       */ .sx              { color: var(--code-invalid); }
	/* LiteralStringRegex       */ .sr              { color: var(--code-invalid); }
	/* LiteralStringSingle      */ .s1              { color: var(--code-invalid); }
	/* LiteralStringSymbol      */ .ss              { color: var(--code-invalid); }
	/* LiteralNumber            */ .m               { color: var(--code-literals); }
	/* LiteralNumberBin         */ .mb              { color: var(--code-literals); }
	/* LiteralNumberFloat       */ .mf              { color: var(--code-literals); }
	/* LiteralNumberHex         */ .mh              { color: var(--code-literals); }
	/* LiteralNumberInteger     */ .mi              { color: var(--code-literals); }
	/* LiteralNumberIntegerLong */ .il              { color: var(--code-invalid); }
	/* LiteralNumberOct         */ .mo              { color: var(--code-invalid); }
	/* Operator                 */ .o               { color: var(--code-default); }
	/* OperatorWord             */ .ow              { color: var(--code-invalid); }
	/* Punctuation              */ .p               { color: var(--code-default); }
	/* Comment                  */ .c               { color: var(--code-comments); }
	/* CommentHashbang          */ .ch              { color: var(--code-invalid); }
	/* CommentMultiline         */ .cm              { color: var(--code-comments); }
	/* CommentSingle            */ .c1              { color: var(--code-comments); }
	/* CommentSpecial           */ .cs              { color: var(--code-invalid); }
	/* CommentPreproc           */ .cp              { color: var(--code-control-flow); }
	/* CommentPreprocFile       */ .cpf             { color: var(--code-literals); }
	/* Generic                  */ .g               { color: var(--code-invalid); }
	/* GenericDeleted           */ .gd              { color: var(--code-invalid); }
	/* GenericEmph              */ .ge              { color: var(--code-invalid); font-style: italic; }
	/* GenericError             */ .gr              { color: var(--code-invalid); }
	/* GenericHeading           */ .gh              { color: var(--code-invalid); }
	/* GenericInserted          */ .gi              { color: var(--code-invalid); }
	/* GenericOutput            */ .go              { color: var(--code-invalid); }
	/* GenericPrompt            */ .gp              { color: var(--code-invalid); }
	/* GenericStrong            */ .gs              { color: var(--code-invalid); font-weight: bold; }
	/* GenericSubheading        */ .gu              { color: var(--code-invalid); }
	/* GenericTraceback         */ .gt              { color: var(--code-invalid); }
	/* GenericUnderline         */ .gl              { color: var(--code-invalid); }
	/* TextWhitespace           */ .w               { color: var(--code-invalid); }
}

/* ---------------------------------------------------------------------------------------------- */
/* Debug */

/*
* {
	outline: 1px solid red;
	outline-offset: -1px;
}
*/
