/* ---------------------------------------------------------------------------------------------- */
/* Reset */

* { margin: unset; }

/* ---------------------------------------------------------------------------------------------- */
/* Colors & Fonts */

html {
	--max-width: 800px;

	--accent:      #007fd4;
	--accent-fade: #007fd4a0;

	--dark-background:   #212121;
	--dark-background-2: #2a2a2a;
	--dark-background-3: #313131;
	--dark-draft-stripe: #2c2c2c;
	--dark-text:         #bdbdbd;
	--dark-text-detail:  #616161;
	--dark-text-shadow:  #000000a0;
	--dark-outline:      #404040;
	--dark-scrollbar:    #767676;

	--light-background:   #bdbdbd;
	--light-background-2: #b8b8b8;
	--light-background-3: #b3b3b3;
	--light-draft-stripe: #a0a0a0;
	--light-text:         #212121;
	--light-text-detail:  #404040;
	--light-text-shadow:  #00000020;
	--light-outline:      #404040;
	--light-scrollbar:    #808080;

	--code-background:           #101010;
	--code-line-numbers:         #424242;
	--code-macros:               #7e57c2;
	--code-control-flow:         #e91e63;
	--code-labels:               #607d8b;
	--code-keywords:             #2196f3;
	--code-types:                #00897b;
	--code-functions:            #64dd17;
	--code-variables:            #00bcd4;
	--code-literals:             #ffc107;
	--code-escape-seq:           #ff9800;
	--code-format-specs:         #f44336;
	--code-comments:             #33691e;
	--code-default:              #9e9e9e;
	--code-invalid:              #ff0000;
	--code-highlight-background: #191919;
	--code-highlight-border:     #007fd4;
}

.theme-system, .theme-dark {
	--background:   var(--dark-background);
	--background-2: var(--dark-background-2);
	--background-3: var(--dark-background-3);
	--draft-stripe: var(--dark-draft-stripe);
	--text:         var(--dark-text);
	--text-detail:  var(--dark-text-detail);
	--text-shadow:  var(--dark-text-shadow);
	--outline:      var(--dark-outline);
	--scrollbar:    var(--dark-scrollbar);
}

.theme-light {
	--background:   var(--light-background);
	--background-2: var(--light-background-2);
	--background-3: var(--light-background-3);
	--draft-stripe: var(--light-draft-stripe);
	--text:         var(--light-text);
	--text-detail:  var(--light-text-detail);
	--text-shadow:  var(--light-text-shadow);
	--outline:      var(--light-outline);
	--scrollbar:    var(--light-scrollbar);
}

@media (prefers-color-scheme: light) {
	.theme-system {
		--background:   var(--light-background);
		--draft-stripe: var(--light-draft-stripe);
		--text:         var(--light-text);
		--text-detail:  var(--light-text-detail);
		--text-shadow:  var(--light-text-shadow);
		--outline:      var(--light-outline);
		--scrollbar:    var(--light-scrollbar);
	}
}

body, svg, time {
	transition-duration: 200ms;
	transition-property:
		color,
		background-color,
		border-color,
		outline-color,
		scrollbar-color,
		stroke,
		text-shadow;
}

/* ---------------------------------------------------------------------------------------------- */
/* Focus */

html * {
	outline-color: var(--accent-fade);
	outline-offset: 9px;
	outline-width: 3px;
}

:focus-visible {
	outline-color: var(--accent);
	outline-offset: 3px;
	outline-style: solid;
	transition-duration: 200ms;
	transition-property: outline-offset, outline-color;
}

@supports not selector(:focus-visible) {
	:focus:not(:active) {
		outline-color: var(--accent);
		outline-offset: 3px;
		outline-style: solid;
		transition-duration: 200ms;
		transition-property: outline-offset, outline-color;
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Shared / Standard */

html {
	height: 100%;
	padding-left: clamp(0px, 100vw - 100%, 100% - var(--max-width));
	scrollbar-color: var(--scrollbar) var(--background);
}

head, script, style {
	display: none;
}

body {
	background-color: var(--background);
	display: block;
	margin: 0 auto;
	min-width: 296px;
	max-width: var(--max-width);
}

div {
	display: block;
	margin: 20px 0;
}

header {
	display: block;
	margin-bottom: 20px;
}

main {
	display: block;
	font-size: 14pt;
	padding: 0 20px;
}

footer {
	display: block;
	margin: 20px 0;
}

h1, h2, h3 {
	display: block;
	font-family: sans-serif;
	font-weight: bold;
	margin: 20px 0;
	line-height: normal;

	a, :link, :visited {
		color: var(--text);
		text-decoration: none;

		&:hover {
			text-decoration: underline;
		}
	}
}

h1 { font-size: 30pt; }
h2 { font-size: 26pt; }
h3 { font-size: 18pt; }

a, :link, :visited {
	color: var(--accent);
	cursor: pointer;
	text-decoration: underline;

	hyphenate-character: "";
	@supports not (hyphenate-character: "") {
		hyphens: manual;
	}
}

blockquote {
	padding: 0 10px;
	border-left-color: var(--text-detail);
	border-left-style: solid;
	border-left-width: 3px;
}

button {
	all: unset;
	cursor: pointer;
}

details {
	display: block;
	margin: 20px 0;

	summary {
		cursor: pointer;
		display: block;
		font-family: sans-serif;
		font-size: 14pt;
		font-weight: bold;
		border: 1px solid var(--outline);
		padding: 4px 6px;
		user-select: none;
		transition-duration: 100ms;
		transition-property: background-color;

		&:hover {
			background-color: var(--outline);
		}

		details[open] & {
			margin-bottom: -21px;
		}
	}
}

img {
	align-items: center;
	display: flex;
	justify-content: space-evenly;
	overflow: auto;
}

p {
	display: block;
	margin: 20px 0;
}

pre {
	white-space: pre;
}

table {
	border-collapse: collapse;
	border-spacing: 0;
	margin: 20px 0;
}

thead, tfoot {
	background-color: var(--background-2);
}

th, td {
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
	padding: 8px;
}

.block {
	display: block;
}

.inline {
	display: inline;
}

.container.block {
	margin: 20px 0;
	position: relative;
}

.text, body {
	color: var(--text);
	font-family: serif;
	hyphens: auto;
	line-height: 1.3;
	overflow-wrap: break-word;
	text-align: justify;
	text-shadow: 1px 1px 6px var(--text-shadow);
}

.text.special, :not(pre) > code {
	font-family: code;
	font-feature-settings: "ss01";
	font-size-adjust: ex-height 0.48;
	font-size: 11pt;
	line-height: 19px;
}

.text.special.inline, :not(pre) > code {
	padding: 1px 3px;
	position: relative;
	bottom: 1px;
	white-space: break-spaces;
	hyphenate-character: "";
	@supports not (hyphenate-character: "") {
		hyphens: manual;
	}
}

.copy-block {
	position: absolute;
	right: -1px;
	top: -1px;
	user-select: none;
	height: 33.5px;
	width: 33.5px;
	z-index: 1;

	p {
		background-color: var(--code-highlight-background);
		border: 1px solid var(--outline);
		display: block;
		font-size: 28px;
		justify-content: center;
		line-height: 34px;
		height: 33.5px;
		margin: 0;
		opacity: 0%;
		pointer-events: none;
		text-align: center;
		transition-duration: 100ms;
		transition-timing-function: ease-out;

		button:hover & {
			opacity: 100%;
		}

		button:focus-visible & {
			opacity: 100%;
			transition-duration: 200ms;
			transition-property: opacity, outline-color, outline-offset;
		}

		@supports not selector(:focus-visible) {
			button:focus & {
				opacity: 100%;
				transition-duration: 200ms;
				transition-property: opacity, outline-color, outline-offset;
			}
		}
	}
}

.image-background {
	display: block;
	margin: 0 auto;
	outline: 1px solid var(--outline);
	outline-offset: 0px;
	overflow: hidden;
	width: fit-content;
}

.fade-in {
	animation-duration: 600ms;
	animation-name: fade-in;
	animation-timing-function: cubic-bezier(.5, .5, 0, 1)
}

@keyframes fade-in {
	from {
		opacity: 0%;
		scale: 102%;
	}

	to {
		opacity: 100%;
		scale: 100%;
	}
}

.scroll {
	overflow: auto;
	scrollbar-width: thin;
}

/* ---------------------------------------------------------------------------------------------- */
/* Checklists */

ul:has(li input) {
	padding-left: 20px;
}

ul:has(li input) ul:has(li input) {
	padding-left: 40px;
}

li:has(input) {
	display: block;
}

/* ---------------------------------------------------------------------------------------------- */
/* Code */

code {
	tab-size: 4;
	white-space: pre;
}

.container.code, :not(pre) > code {
	background-color: var(--code-background);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
}

.container.code.block {
	pre {
		counter-reset: line-numbers var(--ln-start, 1);
		will-change: translate;
	}

	code {
		display: block;
		min-width: fit-content;
		padding: 8px 0;
	}

	.line {
		border-color: transparent;
		border-style: solid none;
		border-width: 1px;
		display: flex;
		margin: -2px 0;
	}

	.line::before {
		border-color: inherit;
		border-left-style: solid;
		border-width: 1px;
		content: counter(line-numbers);
		left: 0;
		padding: 0 8px;
		position: sticky;
		text-align: right;
		width: var(--ln-width, 1);
	}

	.cl {
		border-color: transparent;
		border-style: none solid;
		border-width: 0 1px 0 0;
		counter-increment: line-numbers;
		cursor: text;
		flex-grow: 1;
		padding-right: 8px;
	}

	.hl::before {
		border-left-color: var(--code-highlight-border);
	}

	.hl .cl {
		border-right-color: var(--code-highlight-border);
	}

	.hl:nth-child(1 of .hl) {
		border-top-color: var(--code-highlight-border);
		position: relative;
		z-index: 1;
	}

	.hl:nth-last-child(1 of .hl) {
		border-bottom-color: var(--code-highlight-border);
		position: relative;
		z-index: 1;
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Comments */

div.giscus {
	margin: 40px 0;
}

.giscus-frame {
	outline-style: none;
}

.comment {
	background-color: var(--background-2);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
	padding: 8px;
}

.comment .highlight pre,
.comment .js-display-math {
	background-color: var(--code-background);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;

	will-change: translate;

	display: block;
	min-width: fit-content;
	padding: 8px;

	cursor: text;
	white-space: pre;
}

.comment .js-inline-math {
	background-color: var(--code-background);
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
	white-space: pre;
}

/* ---------------------------------------------------------------------------------------------- */
/* Error Pages */

body.error {
	display: flex;
	flex-direction: column;
	height: 80%;

	main {
		align-items: center;
		display: flex;
		flex-grow: 1;
		justify-content: center;

		p {
			font-size: 96pt;
			line-height: 80%;
			margin: 0;
		}
	}

	footer {
		display: none;
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Header */

.header {
	align-items: stretch;
	display: block flex;
	font-family: sans-serif;
	font-size: 14pt;
	font-weight: bold;
	line-height: 28px;

	* {
		outline-offset: 3px;
		text-decoration: none;

		&:focus-visible {
			outline-offset: -3px;
		}

		@supports not selector(:focus-visible) {
			&:focus:not(:active) {
				outline-offset: -3px;
			}
		}
	}
}

.header-title {
	font-size: 18pt;
	margin-right: auto;
	padding: 20px;
}

.header-theme-label {
	font-size: 10pt;
	line-height: unset;
	margin: 0;
	opacity: 0%;
	padding: 20px 10px;
	scale: 0%;
	transition-duration: 100ms;
	transition-timing-function: ease-out;
	transition-property: scale, opacity;

	&:has(+ .header-theme-button:hover) {
		opacity: 50%;
		scale: 100%;
	}
}

.header-theme-button {
	font-size: 18px;
	padding: 20px 10px;
}

.header-theme-icon {
	display: block;
	height: 1em;
	stroke: var(--text);
	user-select: none;
}

.header-theme-icon-background {
	fill: var(--dark-background);
}

.header-theme-icon-fill {
	fill: var(--dark-text);
}

.header-about {
	padding: 20px;
	padding-left: 10px;
}

.header a, .header :link, .header :visited {
	color: var(--text);
}

/* ---------------------------------------------------------------------------------------------- */
/* Home */

.home main {
	padding: 0;
}

.post-list {
	list-style: none;
}

.post-list-item {
	margin: 10px 0;
}

.post-link {
	display: block;
	outline-offset: 3px;
	padding: 0 20px;
	text-decoration: none;

	&.draft {
		background: repeating-linear-gradient(
			35deg,
			transparent,
			transparent 10px,
			var(--draft-stripe) 10px,
			var(--draft-stripe) 20px
		);
	}

	&:focus-visible {
		outline-offset: -3px;
	}

	@supports not selector(:focus-visible) {
		&:focus:not(:active) {
			outline-offset: -3px;
		}
	}
}

.post-title {
	color: var(--accent);
	padding-top: 10px;

	.home & {
		margin: 0;
	}

	.post-link:hover & {
		text-decoration: underline;
	}
}

.post-time {
	color: var(--text-detail);
	display: block;
	font-family: sans-serif;
	font-size: 11pt;
	font-weight: normal;
	min-width: 1lh;
	min-height: 1lh;
	padding-bottom: 10px;
}

/* ---------------------------------------------------------------------------------------------- */
/* Math */

.text.special.math.inline {
	white-space: normal;
}

.text.special.math.inline semantics > * {
	white-space: break-spaces;
}

.math.block .scroll {
	margin: 0;
}

.math.block,
.math.block .scroll,
.math.block math,
.math.block semantics {
	white-space: normal;
}

.math.block math {
	display: block;
	min-width: fit-content;
	padding: 8px;
	text-align: center;
}

.math.block mrow {
	cursor: text;
}

.math.block mtr mtd:not([class]) {
	text-align: right;
}

.math.block mtr mtd:not([class]) + mtd:not([class]) {
	text-align: left;
}

.math.block semantics > * {
	white-space: pre;
}

.math semantics > :not(annotation) {
	font-family: math2;
	font-size: 16pt;
	line-height: unset;
}

html:not(.no-mathml) math semantics > annotation {
	display: none;
}

html.no-mathml .container.math {
	border-color: var(--outline);
	border-style: solid;
	border-width: 1px;
}

html.no-mathml .math.block math {
	text-align: left;
}

html.no-mathml math semantics > :not(annotation) {
	display: none;
}

/* ---------------------------------------------------------------------------------------------- */
/* About */

.about-pic-container {
	float: left;
	margin-right: 20px;
}

@media (max-width: 600px) {
	.about-pic-container {
		float: none;
		margin: 0 auto 20px auto;
	}
}

.about-pic {
	max-width: 256px;
}

.about-link-container {
	display: flex;
	justify-content: space-between;
	user-select: none;
	max-width: calc(40px * 6 + 12px * 5);
	margin: 0 auto;

	li {
		height: 40px;
		width: 40px;
	}

	a {
		display: block;
		font-size: 44px;
		font-family: code;
		font-size: 44px;
		text-decoration: none;
	}

	p {
		aspect-ratio: 1;
		background-color: var(--dark-background);
		border-radius: 4px;
		color: var(--dark-text);
		line-height: 42px;
		margin: 0;
		overflow: hidden;
		text-align: center;

		a[title="GitHub"] & { font-size: 105%; }
		a[title="Mastodon"] & { font-size: 98%; }
	}
}

/* ---------------------------------------------------------------------------------------------- */
/* Syntax highlighting */

code, .chroma {
	color: var(--code-default);

	/* Other                    */ .x               { color: var(--code-invalid); }
	/* Error                    */ .err             { color: var(--code-invalid); }
	/* CodeLine                 */ .cl              { color: var(--code-default); }
	/* LineLink                 */ .lnlinks         { color: var(--code-invalid); }
	/* LineHighlight            */ .hl .cl          { background-color: var(--code-highlight-background); }
	/* LineNumbers              */ .line::before    { background-color: var(--code-background); color: var(--code-line-numbers); }
	/* LineNumbers Highlight    */ .line.hl::before { background-color: var(--code-highlight-background); }
	/* Line                     */ .line            { color: var(--code-default); }
	/* Keyword                  */ .k               { color: var(--code-keywords); }
	/* KeywordConstant          */ .kc              { color: var(--code-literals); }
	/* KeywordDeclaration       */ .kd              { color: var(--code-invalid); }
	/* KeywordNamespace         */ .kn              { color: var(--code-invalid); }
	/* KeywordPseudo            */ .kp              { color: var(--code-invalid); }
	/* KeywordReserved          */ .kr              { color: var(--code-keywords); }
	/* KeywordType              */ .kt              { color: var(--code-types); }
	/* Name                     */ .n               { color: var(--code-default); }
	/* NameAttribute            */ .na              { color: var(--code-keywords); }
	/* NameBuiltin              */ .nb              { color: var(--code-keywords); }
	/* NameBuiltinPseudo        */ .bp              { color: var(--code-invalid); }
	/* NameClass                */ .nc              { color: var(--code-types); }
	/* NameConstant             */ .no              { color: var(--code-invalid); }
	/* NameDecorator            */ .nd              { color: var(--code-invalid); }
	/* NameEntity               */ .ni              { color: var(--code-invalid); }
	/* NameException            */ .ne              { color: var(--code-invalid); }
	/* NameFunction             */ .nf              { color: var(--code-functions); }
	/* NameFunctionMagic        */ .fm              { color: var(--code-invalid); }
	/* NameLabel                */ .nl              { color: var(--code-labels); }
	/* NameNamespace            */ .nn              { color: var(--code-invalid); }
	/* NameOther                */ .nx              { color: var(--code-variables); }
	/* NameProperty             */ .py              { color: var(--code-invalid); }
	/* NameTag                  */ .nt              { color: var(--code-variables); }
	/* NameVariable             */ .nv              { color: var(--code-variables); }
	/* NameVariableClass        */ .vc              { color: var(--code-invalid); }
	/* NameVariableGlobal       */ .vg              { color: var(--code-invalid); }
	/* NameVariableInstance     */ .vi              { color: var(--code-invalid); }
	/* NameVariableMagic        */ .vm              { color: var(--code-invalid); }
	/* Literal                  */ .l               { color: var(--code-invalid); }
	/* LiteralDate              */ .ld              { color: var(--code-invalid); }
	/* LiteralString            */ .s               { color: var(--code-literals); }
	/* LiteralStringAffix       */ .sa              { color: var(--code-invalid); }
	/* LiteralStringBacktick    */ .sb              { color: var(--code-invalid); }
	/* LiteralStringChar        */ .sc              { color: var(--code-literals); }
	/* LiteralStringDelimiter   */ .dl              { color: var(--code-invalid); }
	/* LiteralStringDoc         */ .sd              { color: var(--code-invalid); }
	/* LiteralStringDouble      */ .s2              { color: var(--code-literals); }
	/* LiteralStringEscape      */ .se              { color: var(--code-escape-seq); }
	/* LiteralStringHeredoc     */ .sh              { color: var(--code-invalid); }
	/* LiteralStringInterpol    */ .si              { color: var(--code-invalid); }
	/* LiteralStringOther       */ .sx              { color: var(--code-invalid); }
	/* LiteralStringRegex       */ .sr              { color: var(--code-invalid); }
	/* LiteralStringSingle      */ .s1              { color: var(--code-invalid); }
	/* LiteralStringSymbol      */ .ss              { color: var(--code-invalid); }
	/* LiteralNumber            */ .m               { color: var(--code-literals); }
	/* LiteralNumberBin         */ .mb              { color: var(--code-literals); }
	/* LiteralNumberFloat       */ .mf              { color: var(--code-literals); }
	/* LiteralNumberHex         */ .mh              { color: var(--code-literals); }
	/* LiteralNumberInteger     */ .mi              { color: var(--code-literals); }
	/* LiteralNumberIntegerLong */ .il              { color: var(--code-invalid); }
	/* LiteralNumberOct         */ .mo              { color: var(--code-invalid); }
	/* Operator                 */ .o               { color: var(--code-default); }
	/* OperatorWord             */ .ow              { color: var(--code-invalid); }
	/* Punctuation              */ .p               { color: var(--code-default); }
	/* Comment                  */ .c               { color: var(--code-comments); }
	/* CommentHashbang          */ .ch              { color: var(--code-invalid); }
	/* CommentMultiline         */ .cm              { color: var(--code-comments); }
	/* CommentSingle            */ .c1              { color: var(--code-comments); }
	/* CommentSpecial           */ .cs              { color: var(--code-invalid); }
	/* CommentPreproc           */ .cp              { color: var(--code-control-flow); }
	/* CommentPreprocFile       */ .cpf             { color: var(--code-literals); }
	/* Generic                  */ .g               { color: var(--code-invalid); }
	/* GenericDeleted           */ .gd              { color: var(--code-invalid); }
	/* GenericEmph              */ .ge              { color: var(--code-invalid); font-style: italic; }
	/* GenericError             */ .gr              { color: var(--code-invalid); }
	/* GenericHeading           */ .gh              { color: var(--code-invalid); }
	/* GenericInserted          */ .gi              { color: var(--code-invalid); }
	/* GenericOutput            */ .go              { color: var(--code-invalid); }
	/* GenericPrompt            */ .gp              { color: var(--code-invalid); }
	/* GenericStrong            */ .gs              { color: var(--code-invalid); font-weight: bold; }
	/* GenericSubheading        */ .gu              { color: var(--code-invalid); }
	/* GenericTraceback         */ .gt              { color: var(--code-invalid); }
	/* GenericUnderline         */ .gl              { color: var(--code-invalid); }
	/* TextWhitespace           */ .w               { color: var(--code-invalid); }
}

/* ---------------------------------------------------------------------------------------------- */
/* Debug */

/*
* {
	outline: 1px solid red;
	outline-offset: -1px;
}
*/
